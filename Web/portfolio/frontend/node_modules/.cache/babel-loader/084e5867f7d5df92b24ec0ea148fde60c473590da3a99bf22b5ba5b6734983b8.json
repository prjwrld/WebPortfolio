{"ast":null,"code":"var _jsxFileName = \"/Users/prjwlsmac/Downloads/Web/portfolio/frontend/src/utils/typewriter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Typewriter = ({\n  roles\n}) => {\n  _s();\n  const [currentText, setCurrentText] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [roleIndex, setRoleIndex] = useState(0);\n  const [typingSpeed, setTypingSpeed] = useState(100);\n  const cursorRef = useRef(null);\n\n  // Get the current role from the roles array\n  const currentRole = roles[roleIndex];\n\n  // Update cursor position\n  useEffect(() => {\n    if (cursorRef.current) {\n      cursorRef.current.style.display = 'inline-block';\n    }\n  }, [currentText]);\n\n  // Typewriter effect\n  useEffect(() => {\n    const pauseTime = 1500; // Time to pause at the end of a word\n\n    const timer = setTimeout(() => {\n      if (isDeleting) {\n        // Deleting text\n        setCurrentText(currentRole.substring(0, currentText.length - 1));\n        setTypingSpeed(50); // Faster when deleting\n      } else {\n        // Typing text\n        setCurrentText(currentRole.substring(0, currentText.length + 1));\n        setTypingSpeed(100);\n      }\n\n      // Handle transitions between typing and deleting\n      if (!isDeleting && currentText === currentRole) {\n        // Finished typing, start deleting after pause\n        setTimeout(() => setIsDeleting(true), pauseTime);\n      } else if (isDeleting && currentText === '') {\n        // Finished deleting, move to next role\n        setIsDeleting(false);\n        setRoleIndex(prevIndex => (prevIndex + 1) % roles.length);\n        setTypingSpeed(100);\n      }\n    }, typingSpeed);\n    return () => clearTimeout(timer);\n  }, [currentText, isDeleting, currentRole, roleIndex, roles, typingSpeed]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typewriter-text\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"neon-gradient-text\",\n      children: [currentText, /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: cursorRef,\n        className: \"cursor\",\n        style: {\n          display: 'inline-block',\n          width: '2px',\n          height: '1.2em',\n          backgroundColor: 'currentColor',\n          marginLeft: '2px',\n          verticalAlign: 'middle',\n          animation: 'blink 0.8s infinite'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Typewriter, \"zgdxk3Oxffr7leX2dcbmXk9FJSs=\");\n_c = Typewriter;\nexport default Typewriter;\nvar _c;\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Typewriter","roles","_s","currentText","setCurrentText","isDeleting","setIsDeleting","roleIndex","setRoleIndex","typingSpeed","setTypingSpeed","cursorRef","currentRole","current","style","display","pauseTime","timer","setTimeout","substring","length","prevIndex","clearTimeout","className","children","ref","width","height","backgroundColor","marginLeft","verticalAlign","animation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prjwlsmac/Downloads/Web/portfolio/frontend/src/utils/typewriter.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Typewriter = ({ roles }) => {\n  const [currentText, setCurrentText] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [roleIndex, setRoleIndex] = useState(0);\n  const [typingSpeed, setTypingSpeed] = useState(100);\n  const cursorRef = useRef(null);\n  \n  // Get the current role from the roles array\n  const currentRole = roles[roleIndex];\n  \n  // Update cursor position\n  useEffect(() => {\n    if (cursorRef.current) {\n      cursorRef.current.style.display = 'inline-block';\n    }\n  }, [currentText]);\n  \n  // Typewriter effect\n  useEffect(() => {\n    const pauseTime = 1500; // Time to pause at the end of a word\n    \n    const timer = setTimeout(() => {\n      if (isDeleting) {\n        // Deleting text\n        setCurrentText(currentRole.substring(0, currentText.length - 1));\n        setTypingSpeed(50); // Faster when deleting\n      } else {\n        // Typing text\n        setCurrentText(currentRole.substring(0, currentText.length + 1));\n        setTypingSpeed(100);\n      }\n      \n      // Handle transitions between typing and deleting\n      if (!isDeleting && currentText === currentRole) {\n        // Finished typing, start deleting after pause\n        setTimeout(() => setIsDeleting(true), pauseTime);\n      } else if (isDeleting && currentText === '') {\n        // Finished deleting, move to next role\n        setIsDeleting(false);\n        setRoleIndex((prevIndex) => (prevIndex + 1) % roles.length);\n        setTypingSpeed(100);\n      }\n    }, typingSpeed);\n    \n    return () => clearTimeout(timer);\n  }, [currentText, isDeleting, currentRole, roleIndex, roles, typingSpeed]);\n  \n  return (\n    <span className=\"typewriter-text\">\n      <span className=\"neon-gradient-text\">\n        {currentText}\n        <span \n          ref={cursorRef}\n          className=\"cursor\" \n          style={{\n            display: 'inline-block',\n            width: '2px',\n            height: '1.2em',\n            backgroundColor: 'currentColor',\n            marginLeft: '2px',\n            verticalAlign: 'middle',\n            animation: 'blink 0.8s infinite'\n          }}\n        />\n      </span>\n    </span>\n  );\n};\n\nexport default Typewriter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}