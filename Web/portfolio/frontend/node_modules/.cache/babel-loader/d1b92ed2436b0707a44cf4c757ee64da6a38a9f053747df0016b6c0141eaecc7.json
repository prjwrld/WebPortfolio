{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n\n// Knowledge base with structured data\nconst knowledgeBase = {\n  about: {\n    description: \"I'm Prajwal Prasad, an AI Developer and Growth Engineer passionate about building innovative AI solutions. I specialize in creating intelligent systems that solve real-world problems.\",\n    education: \"Pursuing Bachelor's in Computer Applications at Amrita Vishwa Vidyapeetham, focusing on AI and software development.\",\n    currentRole: \"Growth Engineer at Nella Marketing, developing AI agents for lead automation and business process optimization.\"\n  },\n  skills: {\n    programming: ['Python', 'JavaScript', 'Java', 'C++', 'SQL'],\n    frameworks: ['React', 'Node.js', 'TensorFlow', 'PyTorch', 'Hugging Face Transformers'],\n    technologies: ['RAG Systems', 'LLM Fine-tuning', 'Cloud Platforms (Azure, GCP)', 'Docker', 'Git'],\n    softSkills: ['Problem Solving', 'Team Collaboration', 'Project Management', 'Communication']\n  },\n  projects: [{\n    name: 'AI Meeting Summarizer',\n    description: 'Automated meeting notes generation using Whisper and Hugging Face models.',\n    technologies: ['Python', 'Whisper', 'Hugging Face', 'NLP'],\n    impact: 'Reduced meeting documentation time by 70%'\n  }, {\n    name: 'AI Voice Agent',\n    description: 'Voice-enabled assistant with RAG and TTS capabilities for document search and Q&A.',\n    technologies: ['Python', 'RAG', 'TTS', 'Vector DB'],\n    impact: 'Enabled natural language queries across document repositories'\n  }, {\n    name: 'BloodLink',\n    description: 'Platform connecting blood donors with recipients in need.',\n    technologies: ['React', 'Node.js', 'MongoDB', 'Google Maps API'],\n    impact: 'Facilitated over 1,000+ successful blood donations'\n  }],\n  experience: [{\n    role: 'Growth Engineer',\n    company: 'Nella Marketing',\n    duration: '2023 - Present',\n    responsibilities: ['Develop AI agents for lead generation automation', 'Implement RAG systems for knowledge management', 'Optimize business processes using AI/ML']\n  }, {\n    role: 'Web Developer',\n    company: 'Godofon Events',\n    duration: '2022 - 2023',\n    responsibilities: ['Developed and maintained event management web applications', 'Implemented responsive UI/UX designs', 'Integrated third-party APIs for payment and notifications']\n  }]\n};\nconst chatService = {\n  sendMessage: async message => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/chat/message`, {\n        message,\n        context: 'portfolio_assistant',\n        knowledgeBase: true // Indicate we want structured responses\n      });\n      return response.data.response || generateStructuredResponse(message);\n    } catch (error) {\n      console.error('Chat service error:', error);\n      return generateStructuredResponse(message);\n    }\n  }\n};\nconst generateStructuredResponse = message => {\n  const lowerMessage = message.toLowerCase().trim();\n\n  // Intent detection with priority\n  const intents = [{\n    name: 'greeting',\n    patterns: ['hi', 'hello', 'hey', 'greetings', 'good morning', 'good afternoon', 'good evening', 'howdy', \"what's up\", 'sup'],\n    priority: 1,\n    handler: handleGreeting\n  }, {\n    name: 'about',\n    patterns: ['who are you', 'tell me about yourself', 'introduce yourself', 'what do you do'],\n    priority: 2,\n    handler: handleAbout\n  }, {\n    name: 'projects',\n    patterns: ['project', 'built', 'created', 'developed', 'what have you built', 'show me your work'],\n    priority: 2,\n    handler: handleProjects\n  }, {\n    name: 'skills',\n    patterns: ['skill', 'technologies', 'tech stack', 'what can you do', 'what are you good at', 'expertise'],\n    priority: 2,\n    handler: handleSkills\n  }, {\n    name: 'experience',\n    patterns: ['experience', 'work', 'job', 'career', 'background', 'where have you worked'],\n    priority: 2,\n    handler: handleExperience\n  }, {\n    name: 'contact',\n    patterns: ['contact', 'get in touch', 'email', 'linkedin', 'github', 'social media'],\n    priority: 2,\n    handler: handleContact\n  }];\n\n  // Find matching intents\n  const matchedIntents = intents.filter(intent => intent.patterns.some(pattern => lowerMessage.includes(pattern))).sort((a, b) => b.priority - a.priority);\n\n  // Handle the highest priority intent\n  if (matchedIntents.length > 0) {\n    return matchedIntents[0].handler(lowerMessage);\n  }\n\n  // Default response for unknown queries\n  return handleDefault();\n};\n\n// Intent Handlers\nfunction handleGreeting() {\n  const greetings = [`Hi there! ðŸ‘‹ I'm Prajwal's AI assistant. I can help you explore his professional background, projects, and skills. What would you like to know?`, `Hello! ðŸ˜Š Thanks for stopping by. I'm here to share insights about Prajwal's work in AI and software development. What interests you?`, `Hey there! ðŸ‘‹ I'm excited to chat about Prajwal's journey in tech. Would you like to hear about his projects, skills, or experience?`];\n  return {\n    type: 'text',\n    content: randomResponse(greetings)\n  };\n}\nfunction handleAbout() {\n  return {\n    type: 'markdown',\n    content: `# About Me\n\nI'm Prajwal's AI assistant! Here's a quick introduction:\n\n${knowledgeBase.about.description}\n\n${knowledgeBase.about.education}\n\n${knowledgeBase.about.currentRole}\n\nWhat would you like to explore further?`\n  };\n}\nfunction handleProjects(query) {\n  // If asking about a specific project\n  const projectNames = knowledgeBase.projects.map(p => p.name.toLowerCase());\n  const mentionedProject = projectNames.find(name => query.includes(name.toLowerCase()));\n  if (mentionedProject) {\n    const project = knowledgeBase.projects.find(p => p.name.toLowerCase() === mentionedProject);\n    return formatProjectDetails(project);\n  }\n\n  // List all projects with brief descriptions\n  const projectsList = knowledgeBase.projects.map(project => ({\n    title: project.name,\n    description: project.description,\n    technologies: project.technologies,\n    impact: project.impact\n  }));\n  return {\n    type: 'projects',\n    title: 'My Projects',\n    items: projectsList,\n    message: 'Would you like more details about any specific project?'\n  };\n}\nfunction handleSkills() {\n  return {\n    type: 'skills',\n    title: 'My Skills',\n    categories: [{\n      name: 'Programming',\n      items: knowledgeBase.skills.programming\n    }, {\n      name: 'Frameworks',\n      items: knowledgeBase.skills.frameworks\n    }, {\n      name: 'Technologies',\n      items: knowledgeBase.skills.technologies\n    }, {\n      name: 'Soft Skills',\n      items: knowledgeBase.skills.softSkills\n    }],\n    message: \"I'm always learning and expanding my skill set. Is there a particular area you'd like to know more about?\"\n  };\n}\nfunction handleExperience() {\n  const experienceItems = knowledgeBase.experience.map(exp => ({\n    role: exp.role,\n    company: exp.company,\n    duration: exp.duration,\n    responsibilities: exp.responsibilities\n  }));\n  return {\n    type: 'experience',\n    title: 'Work Experience',\n    items: experienceItems,\n    message: 'Would you like more details about any of these roles?'\n  };\n}\nfunction handleContact() {\n  return {\n    type: 'contact',\n    title: 'Get In Touch',\n    items: [{\n      type: 'linkedin',\n      label: 'LinkedIn',\n      url: 'https://linkedin.com/in/yourusername'\n    }, {\n      type: 'github',\n      label: 'GitHub',\n      url: 'https://github.com/yourusername'\n    }, {\n      type: 'email',\n      label: 'Email',\n      value: 'your.email@example.com'\n    }],\n    message: 'Feel free to reach out for collaborations or just to say hi!'\n  };\n}\nfunction handleDefault() {\n  const defaultResponses = [{\n    type: 'text',\n    content: \"I'm not sure I fully understand. Could you rephrase that? I can tell you about Prajwal's projects, skills, or work experience.\"\n  }, {\n    type: 'suggestions',\n    content: \"I'd love to help with that! Here are some things I can tell you about:\",\n    suggestions: ['Tell me about your projects', 'What are your technical skills?', 'Can you share your work experience?', 'How can I contact you?']\n  }];\n  return randomResponse(defaultResponses);\n}\n\n// Helper functions\nfunction randomResponse(responses) {\n  return responses[Math.floor(Math.random() * responses.length)];\n}\nfunction formatProjectDetails(project) {\n  return `**${project.name}**\\n\\n` + `${project.description}\\n\\n` + `**Technologies Used:** ${project.technologies.join(', ').replace(/, ([^,]*)$/, ', and $1')}\\n` + `**Impact:** ${project.impact}\\n\\n` + `Would you like to know more about this project or see some code samples?`;\n}\nexport default chatService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","knowledgeBase","about","description","education","currentRole","skills","programming","frameworks","technologies","softSkills","projects","name","impact","experience","role","company","duration","responsibilities","chatService","sendMessage","message","response","post","context","data","generateStructuredResponse","error","console","lowerMessage","toLowerCase","trim","intents","patterns","priority","handler","handleGreeting","handleAbout","handleProjects","handleSkills","handleExperience","handleContact","matchedIntents","filter","intent","some","pattern","includes","sort","a","b","length","handleDefault","greetings","type","content","randomResponse","query","projectNames","map","p","mentionedProject","find","project","formatProjectDetails","projectsList","title","items","categories","experienceItems","exp","label","url","value","defaultResponses","suggestions","responses","Math","floor","random","join","replace"],"sources":["/Users/prjwlsmac/Downloads/Web/portfolio/frontend/src/services/chatService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n\n// Knowledge base with structured data\nconst knowledgeBase = {\n  about: {\n    description: \"I'm Prajwal Prasad, an AI Developer and Growth Engineer passionate about building innovative AI solutions. I specialize in creating intelligent systems that solve real-world problems.\",\n    education: \"Pursuing Bachelor's in Computer Applications at Amrita Vishwa Vidyapeetham, focusing on AI and software development.\",\n    currentRole: \"Growth Engineer at Nella Marketing, developing AI agents for lead automation and business process optimization.\"\n  },\n  skills: {\n    programming: ['Python', 'JavaScript', 'Java', 'C++', 'SQL'],\n    frameworks: ['React', 'Node.js', 'TensorFlow', 'PyTorch', 'Hugging Face Transformers'],\n    technologies: ['RAG Systems', 'LLM Fine-tuning', 'Cloud Platforms (Azure, GCP)', 'Docker', 'Git'],\n    softSkills: ['Problem Solving', 'Team Collaboration', 'Project Management', 'Communication']\n  },\n  projects: [\n    {\n      name: 'AI Meeting Summarizer',\n      description: 'Automated meeting notes generation using Whisper and Hugging Face models.',\n      technologies: ['Python', 'Whisper', 'Hugging Face', 'NLP'],\n      impact: 'Reduced meeting documentation time by 70%'\n    },\n    {\n      name: 'AI Voice Agent',\n      description: 'Voice-enabled assistant with RAG and TTS capabilities for document search and Q&A.',\n      technologies: ['Python', 'RAG', 'TTS', 'Vector DB'],\n      impact: 'Enabled natural language queries across document repositories'\n    },\n    {\n      name: 'BloodLink',\n      description: 'Platform connecting blood donors with recipients in need.',\n      technologies: ['React', 'Node.js', 'MongoDB', 'Google Maps API'],\n      impact: 'Facilitated over 1,000+ successful blood donations'\n    }\n  ],\n  experience: [\n    {\n      role: 'Growth Engineer',\n      company: 'Nella Marketing',\n      duration: '2023 - Present',\n      responsibilities: [\n        'Develop AI agents for lead generation automation',\n        'Implement RAG systems for knowledge management',\n        'Optimize business processes using AI/ML'\n      ]\n    },\n    {\n      role: 'Web Developer',\n      company: 'Godofon Events',\n      duration: '2022 - 2023',\n      responsibilities: [\n        'Developed and maintained event management web applications',\n        'Implemented responsive UI/UX designs',\n        'Integrated third-party APIs for payment and notifications'\n      ]\n    }\n  ]\n};\n\nconst chatService = {\n  sendMessage: async (message) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/chat/message`, {\n        message,\n        context: 'portfolio_assistant',\n        knowledgeBase: true // Indicate we want structured responses\n      });\n      return response.data.response || generateStructuredResponse(message);\n    } catch (error) {\n      console.error('Chat service error:', error);\n      return generateStructuredResponse(message);\n    }\n  }\n};\n\nconst generateStructuredResponse = (message) => {\n  const lowerMessage = message.toLowerCase().trim();\n  \n  // Intent detection with priority\n  const intents = [\n    {\n      name: 'greeting',\n      patterns: ['hi', 'hello', 'hey', 'greetings', 'good morning', 'good afternoon', 'good evening', 'howdy', \"what's up\", 'sup'],\n      priority: 1,\n      handler: handleGreeting\n    },\n    {\n      name: 'about',\n      patterns: ['who are you', 'tell me about yourself', 'introduce yourself', 'what do you do'],\n      priority: 2,\n      handler: handleAbout\n    },\n    {\n      name: 'projects',\n      patterns: ['project', 'built', 'created', 'developed', 'what have you built', 'show me your work'],\n      priority: 2,\n      handler: handleProjects\n    },\n    {\n      name: 'skills',\n      patterns: ['skill', 'technologies', 'tech stack', 'what can you do', 'what are you good at', 'expertise'],\n      priority: 2,\n      handler: handleSkills\n    },\n    {\n      name: 'experience',\n      patterns: ['experience', 'work', 'job', 'career', 'background', 'where have you worked'],\n      priority: 2,\n      handler: handleExperience\n    },\n    {\n      name: 'contact',\n      patterns: ['contact', 'get in touch', 'email', 'linkedin', 'github', 'social media'],\n      priority: 2,\n      handler: handleContact\n    }\n  ];\n\n  // Find matching intents\n  const matchedIntents = intents\n    .filter(intent => intent.patterns.some(pattern => lowerMessage.includes(pattern)))\n    .sort((a, b) => b.priority - a.priority);\n\n  // Handle the highest priority intent\n  if (matchedIntents.length > 0) {\n    return matchedIntents[0].handler(lowerMessage);\n  }\n\n  // Default response for unknown queries\n  return handleDefault();\n};\n\n// Intent Handlers\nfunction handleGreeting() {\n  const greetings = [\n    `Hi there! ðŸ‘‹ I'm Prajwal's AI assistant. I can help you explore his professional background, projects, and skills. What would you like to know?`,\n    `Hello! ðŸ˜Š Thanks for stopping by. I'm here to share insights about Prajwal's work in AI and software development. What interests you?`,\n    `Hey there! ðŸ‘‹ I'm excited to chat about Prajwal's journey in tech. Would you like to hear about his projects, skills, or experience?`\n  ];\n  return { type: 'text', content: randomResponse(greetings) };\n}\n\nfunction handleAbout() {\n  return {\n    type: 'markdown',\n    content: `# About Me\n\nI'm Prajwal's AI assistant! Here's a quick introduction:\n\n${knowledgeBase.about.description}\n\n${knowledgeBase.about.education}\n\n${knowledgeBase.about.currentRole}\n\nWhat would you like to explore further?`\n  };\n}\n\nfunction handleProjects(query) {\n  // If asking about a specific project\n  const projectNames = knowledgeBase.projects.map(p => p.name.toLowerCase());\n  const mentionedProject = projectNames.find(name => query.includes(name.toLowerCase()));\n  \n  if (mentionedProject) {\n    const project = knowledgeBase.projects.find(p => p.name.toLowerCase() === mentionedProject);\n    return formatProjectDetails(project);\n  }\n  \n  // List all projects with brief descriptions\n  const projectsList = knowledgeBase.projects.map(project => ({\n    title: project.name,\n    description: project.description,\n    technologies: project.technologies,\n    impact: project.impact\n  }));\n  \n  return {\n    type: 'projects',\n    title: 'My Projects',\n    items: projectsList,\n    message: 'Would you like more details about any specific project?'\n  };\n}\n\nfunction handleSkills() {\n  return {\n    type: 'skills',\n    title: 'My Skills',\n    categories: [\n      { name: 'Programming', items: knowledgeBase.skills.programming },\n      { name: 'Frameworks', items: knowledgeBase.skills.frameworks },\n      { name: 'Technologies', items: knowledgeBase.skills.technologies },\n      { name: 'Soft Skills', items: knowledgeBase.skills.softSkills }\n    ],\n    message: \"I'm always learning and expanding my skill set. Is there a particular area you'd like to know more about?\"\n  };\n}\n\nfunction handleExperience() {\n  const experienceItems = knowledgeBase.experience.map(exp => ({\n    role: exp.role,\n    company: exp.company,\n    duration: exp.duration,\n    responsibilities: exp.responsibilities\n  }));\n  \n  return {\n    type: 'experience',\n    title: 'Work Experience',\n    items: experienceItems,\n    message: 'Would you like more details about any of these roles?'\n  };\n}\n\nfunction handleContact() {\n  return {\n    type: 'contact',\n    title: 'Get In Touch',\n    items: [\n      { type: 'linkedin', label: 'LinkedIn', url: 'https://linkedin.com/in/yourusername' },\n      { type: 'github', label: 'GitHub', url: 'https://github.com/yourusername' },\n      { type: 'email', label: 'Email', value: 'your.email@example.com' }\n    ],\n    message: 'Feel free to reach out for collaborations or just to say hi!'\n  };\n}\n\nfunction handleDefault() {\n  const defaultResponses = [\n    {\n      type: 'text',\n      content: \"I'm not sure I fully understand. Could you rephrase that? I can tell you about Prajwal's projects, skills, or work experience.\"\n    },\n    {\n      type: 'suggestions',\n      content: \"I'd love to help with that! Here are some things I can tell you about:\",\n      suggestions: [\n        'Tell me about your projects',\n        'What are your technical skills?',\n        'Can you share your work experience?',\n        'How can I contact you?'\n      ]\n    }\n  ];\n  return randomResponse(defaultResponses);\n}\n\n// Helper functions\nfunction randomResponse(responses) {\n  return responses[Math.floor(Math.random() * responses.length)];\n}\n\nfunction formatProjectDetails(project) {\n  return `**${project.name}**\\n\\n` +\n    `${project.description}\\n\\n` +\n    `**Technologies Used:** ${project.technologies.join(', ').replace(/, ([^,]*)$/, ', and $1')}\\n` +\n    `**Impact:** ${project.impact}\\n\\n` +\n    `Would you like to know more about this project or see some code samples?`;\n}\n\nexport default chatService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}